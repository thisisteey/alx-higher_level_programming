Test case for the matrix_divided function

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test case 1: Valid matrix division
>>> matrix = [[2, 3, 1], [7, 8, 1]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[1.0, 1.5, 0.5], [3.5, 4.0, 0.5]]

Test case 2: TypeError when matrix is not a list
>>> matrix = 239
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case 3: TypeError when rows of differnt sizes in the matrix
>>> matrix = [[2, 3, 8], [7, 6, 5], [4, 3]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Test case 4: TypeError when divisor is not an integer or float
>>> matrix = [[2, 3], [1, 6]]
>>> div = "str"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: div must be a number

Test case 5: ZeroDivisionError when divisor is zero
>>> matrix = [[1, 4], [5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
